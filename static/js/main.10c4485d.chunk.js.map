{"version":3,"sources":["Component/Home/Content/Profile/Image/icon.png","Component/Home/Content/Profile/index.jsx","Component/Home/Content/NewsFeed/index.jsx","Component/Home/Content/Contact/index.jsx","Component/Home/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Index","className","src","require","onClick","window","open","alt","width","height","frameborder","allowfullscreen","title","data","img","GitHub","color","redirectLink","handle","LinkedIn","Twitter","Facebook","Instagram","MailOutline","role","aria-label","map","style","Profile","NewsFeed","Contact","App","path","exact","component","Home","to","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uLAAAA,EAAOC,QAAU,IAA0B,kC,wHCe5BC,EAbD,WACV,OACI,yBAAKC,UAAU,qCACX,yBAAKA,UAAU,iCACX,yBAAKC,IAAKC,EAAQ,IAAqBC,QAAS,WAAKC,OAAOC,KAAK,2CAA4CL,UAAU,iCAAiCM,IAAI,8BAEhK,wBAAIN,UAAU,sBAAsBG,QAAS,WAAKC,OAAOC,KAAK,4CAA9D,qBACA,uBAAGL,UAAU,uBAAb,6GACA,4BAAQA,UAAU,wBAAwBG,QAAS,WAAKC,OAAOC,KAAK,4CAApE,kBCGGN,EAXD,WACV,OACI,6BACI,4BAAQQ,MAAM,OAAOC,OAAO,QAAQP,IAAI,8EAA8ED,UAAU,qBAAqBS,YAAY,IAAIC,gBAAgB,GAAGC,MAAM,kBAC9L,4BAAQJ,MAAM,MAAMC,OAAO,MAAMP,IAAI,8EAA8EQ,YAAY,IAAIC,gBAAgB,GAAGC,MAAM,kBAC5J,4BAAQV,IAAI,8EAA8ED,UAAU,qBAAqBS,YAAY,IAAIC,gBAAgB,GAAGC,MAAM,kBAClK,4BAAQV,IAAI,8EAA8ED,UAAU,qBAAqBS,YAAY,IAAIC,gBAAgB,GAAGC,MAAM,oB,gDC8C/JZ,EAnDD,WACV,IAAMa,EAAO,CACT,CACIC,IAAKC,IACLC,MAAM,OACNC,aAAa,oCACbC,OAAO,kBAEX,CACIJ,IAAKK,IACLH,MAAM,UACNC,aAAa,yCACbC,OAAO,aAEX,CACIJ,IAAKM,IACLJ,MAAM,UACNC,aAAa,sCACbC,OAAO,mBAEX,CACIJ,IAAKO,IACLL,MAAM,UACNC,aAAa,4CACbC,OAAO,mBAEX,CACIJ,IAAKQ,IACLN,MAAM,UACNC,aAAa,+CACbC,OAAO,qBAEX,CACIJ,IAAKS,IACLP,MAAM,UACNC,aAAa,mCACbC,OAAO,oBAGf,OACI,yBAAKjB,UAAU,qCACX,wBAAIA,UAAU,QAAd,wCAA0D,0BAAMuB,KAAK,MAAMC,aAAW,MAA5B,6BAC1D,4BACCZ,EAAKa,KAAI,SAACb,GAAD,OAAQ,wBAAIZ,UAAU,gCAAgCG,QAAS,WAAKC,OAAOC,KAAKO,EAAKI,gBAC3F,yBAAKhB,UAAU,qBAAoB,0BAAMA,UAAU,QAAO,kBAACY,EAAKC,IAAN,CAAUa,MAAO,CAACX,MAAMH,EAAKG,UAAkBH,EAAKK,eCxB/GlB,EAlBD,WACV,OACI,6BACG,yBAAKC,UAAU,OACV,yBAAKA,UAAU,iBACZ,kBAAC2B,EAAD,OAEH,yBAAK3B,UAAU,iBACX,kBAAC4B,EAAD,OAEJ,yBAAK5B,UAAU,iBACX,kBAAC6B,EAAD,U,MCELC,MAbf,WACE,OACE,yBAAK9B,UAAU,kBACZ,kBAAC,IAAD,KACG,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+B,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAUC,GAAG,UCCLC,QACW,cAA7BhC,OAAOiC,SAASC,UAEe,UAA7BlC,OAAOiC,SAASC,UAEhBlC,OAAOiC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.10c4485d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.ef035e28.png\";","import React from 'react';\n\nconst Index = () => {\n    return (\n        <div className=\"component-overall p-3 text-center\">\n            <div className=\"d-flex justify-content-center\">\n                <img src={require('./Image/icon.png')} onClick={()=>{window.open('https://www.linkedin.com/in/iampartha/')}} className=\"profile-picture pointer-cursor\" alt=\"Profile of parthasarathi\" />\n            </div>\n            <h6 className=\"pointer-cursor mt-2\" onClick={()=>{window.open('https://www.linkedin.com/in/iampartha/')}}>Parthasarathi R V</h6>\n            <p className=\"profile-description\">Full stack developer [ MERN / MEAN ] | ReactJS | AngularJS | Node.js | Javascript | Passionate Researcher</p>\n            <button className=\"btn profile-view mb-3\" onClick={()=>{window.open('https://www.linkedin.com/in/iampartha/')}}>View Profile</button>\n        </div>\n    )\n}\n\nexport default Index;\n","import React from 'react';\n\nconst Index = () => {\n    return (\n        <div>\n            <iframe width=\"100%\" height=\"300px\" src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:6679972191141990400\" className=\"newsfeed-post mb-2\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe>\n            <iframe width=\"500\" height=\"300\" src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:6651437400696385537\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe>\n            <iframe src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:6610524324099121154\" className=\"newsfeed-post mb-2\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe>\n            <iframe src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:6482602099212423168\" className=\"newsfeed-post mb-2\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe>\n        </div>\n    )\n}\n\nexport default Index;\n","import React from 'react';\nimport { GitHub, LinkedIn, Twitter, Facebook, Instagram, MailOutline } from '@material-ui/icons';\n\nconst Index = () => {\n    const data = [\n        {\n            img: GitHub,\n            color:'#000',\n            redirectLink:'https://github.com/codesof-partha',\n            handle:'CodesOf-Partha'\n        },\n        {\n            img: LinkedIn,\n            color:'#0e76a8',\n            redirectLink:'https://www.linkedin.com/in/iampartha/',\n            handle:'iampartha'\n        },\n        {\n            img: Twitter,\n            color:'#00acee',\n            redirectLink:'https://twitter.com/RvParthasarathi',\n            handle:'RvParthasarathi'\n        },\n        {\n            img: Facebook,\n            color:'#4894FF',\n            redirectLink:'https://www.facebook.com/rvparthasarathi/',\n            handle:'rvparthasarathi'\n        },\n        {\n            img: Instagram,\n            color:'#C231A2',\n            redirectLink:'https://www.instagram.com/parthasarathi.r.v/',\n            handle:'parthasarathi.r.v'\n        },\n        {\n            img: MailOutline,\n            color:'#DD4B3E',\n            redirectLink:'mailto:rvparthasarathi@gmail.com',\n            handle:'rvparthasarathi'\n        }\n    ]\n    return (\n        <div className=\"component-overall p-3 text-center\">\n            <h6 className=\"mb-3\">Come let's talk with a cup of coffee!<span role=\"img\" aria-label=\"!!\">‚òïÔ∏èüòã</span></h6>\n            <ul>\n            {data.map((data)=><li className=\"pointer-cursor mb-3 text-left\" onClick={()=>{window.open(data.redirectLink)}}>\n                <div className=\"pointer-link pt-1\"><span className=\"pr-2\"><data.img style={{color:data.color}} /></span>{data.handle}</div>\n            </li>)}\n            </ul>\n        </div>\n    )\n}\n\nexport default Index;\n","import React from 'react';\nimport Profile from './Content/Profile';\nimport NewsFeed from './Content/NewsFeed';\nimport Contact from './Content/Contact';\n\nconst Index = () => {\n    return (\n        <div>\n           <div className=\"row\">\n                <div className=\"col-lg-3 mb-3\">\n                   <Profile />\n                </div>\n                <div className=\"col-lg-6 mb-3\">\n                    <NewsFeed />\n                </div>\n                <div className=\"col-lg-3 mb-3\">\n                    <Contact />\n               </div>\n           </div>\n        </div>\n    )\n}\n\nexport default Index;\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport { Home } from './Component';\nimport './app.scss';\n\nfunction App() {\n  return (\n    <div className=\"container mt-5\">\n       <Router>\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}